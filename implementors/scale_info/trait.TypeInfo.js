(function() {var implementors = {};
implementors["account"] = [{"text":"impl TypeInfo for <a class=\"struct\" href=\"account/struct.EthereumSignature.html\" title=\"struct account::EthereumSignature\">EthereumSignature</a>","synthetic":false,"types":["account::EthereumSignature"]}];
implementors["moonbase_runtime"] = [{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonbase_runtime/opaque/struct.SessionKeys.html\" title=\"struct moonbase_runtime::opaque::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["moonbase_runtime::opaque::SessionKeys"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.ProxyType.html\" title=\"enum moonbase_runtime::ProxyType\">ProxyType</a>","synthetic":false,"types":["moonbase_runtime::ProxyType"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.AssetType.html\" title=\"enum moonbase_runtime::AssetType\">AssetType</a>","synthetic":false,"types":["moonbase_runtime::AssetType"]},{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonbase_runtime/struct.AssetRegistrarMetadata.html\" title=\"struct moonbase_runtime::AssetRegistrarMetadata\">AssetRegistrarMetadata</a>","synthetic":false,"types":["moonbase_runtime::AssetRegistrarMetadata"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.CurrencyId.html\" title=\"enum moonbase_runtime::CurrencyId\">CurrencyId</a>","synthetic":false,"types":["moonbase_runtime::CurrencyId"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.Transactors.html\" title=\"enum moonbase_runtime::Transactors\">Transactors</a>","synthetic":false,"types":["moonbase_runtime::Transactors"]},{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonbase_runtime/struct.Runtime.html\" title=\"struct moonbase_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["moonbase_runtime::Runtime"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.Event.html\" title=\"enum moonbase_runtime::Event\">Event</a>","synthetic":false,"types":["moonbase_runtime::Event"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.OriginCaller.html\" title=\"enum moonbase_runtime::OriginCaller\">OriginCaller</a>","synthetic":false,"types":["moonbase_runtime::OriginCaller"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbase_runtime/enum.Call.html\" title=\"enum moonbase_runtime::Call\">Call</a>","synthetic":false,"types":["moonbase_runtime::Call"]}];
implementors["moonbeam_runtime"] = [{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonbeam_runtime/opaque/struct.SessionKeys.html\" title=\"struct moonbeam_runtime::opaque::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["moonbeam_runtime::opaque::SessionKeys"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbeam_runtime/enum.ProxyType.html\" title=\"enum moonbeam_runtime::ProxyType\">ProxyType</a>","synthetic":false,"types":["moonbeam_runtime::ProxyType"]},{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonbeam_runtime/struct.Runtime.html\" title=\"struct moonbeam_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["moonbeam_runtime::Runtime"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbeam_runtime/enum.Event.html\" title=\"enum moonbeam_runtime::Event\">Event</a>","synthetic":false,"types":["moonbeam_runtime::Event"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbeam_runtime/enum.OriginCaller.html\" title=\"enum moonbeam_runtime::OriginCaller\">OriginCaller</a>","synthetic":false,"types":["moonbeam_runtime::OriginCaller"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonbeam_runtime/enum.Call.html\" title=\"enum moonbeam_runtime::Call\">Call</a>","synthetic":false,"types":["moonbeam_runtime::Call"]}];
implementors["moonriver_runtime"] = [{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonriver_runtime/opaque/struct.SessionKeys.html\" title=\"struct moonriver_runtime::opaque::SessionKeys\">SessionKeys</a>","synthetic":false,"types":["moonriver_runtime::opaque::SessionKeys"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonriver_runtime/enum.ProxyType.html\" title=\"enum moonriver_runtime::ProxyType\">ProxyType</a>","synthetic":false,"types":["moonriver_runtime::ProxyType"]},{"text":"impl TypeInfo for <a class=\"struct\" href=\"moonriver_runtime/struct.Runtime.html\" title=\"struct moonriver_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["moonriver_runtime::Runtime"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonriver_runtime/enum.Event.html\" title=\"enum moonriver_runtime::Event\">Event</a>","synthetic":false,"types":["moonriver_runtime::Event"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonriver_runtime/enum.OriginCaller.html\" title=\"enum moonriver_runtime::OriginCaller\">OriginCaller</a>","synthetic":false,"types":["moonriver_runtime::OriginCaller"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"moonriver_runtime/enum.Call.html\" title=\"enum moonriver_runtime::Call\">Call</a>","synthetic":false,"types":["moonriver_runtime::Call"]}];
implementors["pallet_asset_manager"] = [{"text":"impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_asset_manager/pallet/enum.Error.html\" title=\"enum pallet_asset_manager::pallet::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,&nbsp;</span>","synthetic":false,"types":["pallet_asset_manager::pallet::Error"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_asset_manager/pallet/enum.Event.html\" title=\"enum pallet_asset_manager::pallet::Event\">Event</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetId\" title=\"type pallet_asset_manager::pallet::Config::AssetId\">AssetId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetType\" title=\"type pallet_asset_manager::pallet::Config::AssetType\">AssetType</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetRegistrarMetadata\" title=\"type pallet_asset_manager::pallet::Config::AssetRegistrarMetadata\">AssetRegistrarMetadata</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetId\" title=\"type pallet_asset_manager::pallet::Config::AssetId\">AssetId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_asset_manager::pallet::Event"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_asset_manager/pallet/enum.Call.html\" title=\"enum pallet_asset_manager::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetType\" title=\"type pallet_asset_manager::pallet::Config::AssetType\">AssetType</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetRegistrarMetadata\" title=\"type pallet_asset_manager::pallet::Config::AssetRegistrarMetadata\">AssetRegistrarMetadata</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.Balance\" title=\"type pallet_asset_manager::pallet::Config::Balance\">Balance</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.AssetId\" title=\"type pallet_asset_manager::pallet::Config::AssetId\">AssetId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_asset_manager::pallet::Call"]}];
implementors["pallet_author_mapping"] = [{"text":"impl&lt;AccountId, Balance&gt; TypeInfo for <a class=\"struct\" href=\"pallet_author_mapping/pallet/struct.RegistrationInfo.html\" title=\"struct pallet_author_mapping::pallet::RegistrationInfo\">RegistrationInfo</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_author_mapping::pallet::RegistrationInfo"]},{"text":"impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_author_mapping/pallet/enum.Error.html\" title=\"enum pallet_author_mapping::pallet::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,&nbsp;</span>","synthetic":false,"types":["pallet_author_mapping::pallet::Error"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_author_mapping/pallet/trait.Config.html\" title=\"trait pallet_author_mapping::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_author_mapping/pallet/enum.Event.html\" title=\"enum pallet_author_mapping::pallet::Event\">Event</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_author_mapping/pallet/trait.Config.html\" title=\"trait pallet_author_mapping::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_author_mapping::pallet::Event"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_author_mapping/pallet/trait.Config.html\" title=\"trait pallet_author_mapping::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_author_mapping/pallet/enum.Call.html\" title=\"enum pallet_author_mapping::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_author_mapping/pallet/trait.Config.html#associatedtype.AuthorId\" title=\"type pallet_author_mapping::pallet::Config::AuthorId\">AuthorId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_author_mapping/pallet/trait.Config.html\" title=\"trait pallet_author_mapping::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_author_mapping::pallet::Call"]}];
implementors["pallet_ethereum_chain_id"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_ethereum_chain_id/pallet/trait.Config.html\" title=\"trait pallet_ethereum_chain_id::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_ethereum_chain_id/pallet/enum.Call.html\" title=\"enum pallet_ethereum_chain_id::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_ethereum_chain_id/pallet/trait.Config.html\" title=\"trait pallet_ethereum_chain_id::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_ethereum_chain_id::pallet::Call"]}];
implementors["pallet_maintenance_mode"] = [{"text":"impl TypeInfo for <a class=\"enum\" href=\"pallet_maintenance_mode/pallet/enum.Event.html\" title=\"enum pallet_maintenance_mode::pallet::Event\">Event</a>","synthetic":false,"types":["pallet_maintenance_mode::pallet::Event"]},{"text":"impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_maintenance_mode/pallet/enum.Error.html\" title=\"enum pallet_maintenance_mode::pallet::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,&nbsp;</span>","synthetic":false,"types":["pallet_maintenance_mode::pallet::Error"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_maintenance_mode/pallet/trait.Config.html\" title=\"trait pallet_maintenance_mode::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_maintenance_mode/pallet/enum.Call.html\" title=\"enum pallet_maintenance_mode::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_maintenance_mode/pallet/trait.Config.html\" title=\"trait pallet_maintenance_mode::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_maintenance_mode::pallet::Call"]}];
implementors["pallet_migrations"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_migrations/pallet/trait.Config.html\" title=\"trait pallet_migrations::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_migrations/pallet/enum.Event.html\" title=\"enum pallet_migrations::pallet::Event\">Event</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_migrations/pallet/trait.Config.html\" title=\"trait pallet_migrations::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_migrations::pallet::Event"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_migrations/pallet/trait.Config.html\" title=\"trait pallet_migrations::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_migrations/pallet/enum.Call.html\" title=\"enum pallet_migrations::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_migrations/pallet/trait.Config.html\" title=\"trait pallet_migrations::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_migrations::pallet::Call"]}];
implementors["pallet_proxy_genesis_companion"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_proxy_genesis_companion/pallet/trait.Config.html\" title=\"trait pallet_proxy_genesis_companion::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_proxy_genesis_companion/pallet/enum.Call.html\" title=\"enum pallet_proxy_genesis_companion::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_proxy_genesis_companion/pallet/trait.Config.html\" title=\"trait pallet_proxy_genesis_companion::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["pallet_proxy_genesis_companion::pallet::Call"]}];
implementors["parachain_staking"] = [{"text":"impl&lt;T&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/struct.Range.html\" title=\"struct parachain_staking::Range\">Range</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::inflation::Range"]},{"text":"impl&lt;Balance&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/struct.InflationInfo.html\" title=\"struct parachain_staking::InflationInfo\">InflationInfo</a>&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"parachain_staking/struct.Range.html\" title=\"struct parachain_staking::Range\">Range</a>&lt;Balance&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::inflation::InflationInfo"]},{"text":"impl&lt;AccountId, Balance&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.Bond.html\" title=\"struct parachain_staking::pallet::Bond\">Bond</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Bond"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.CollatorStatus.html\" title=\"enum parachain_staking::pallet::CollatorStatus\">CollatorStatus</a>","synthetic":false,"types":["parachain_staking::pallet::CollatorStatus"]},{"text":"impl&lt;AccountId, Balance&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.CollatorSnapshot.html\" title=\"struct parachain_staking::pallet::CollatorSnapshot\">CollatorSnapshot</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"parachain_staking/pallet/struct.Bond.html\" title=\"struct parachain_staking::pallet::Bond\">Bond</a>&lt;AccountId, Balance&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::CollatorSnapshot"]},{"text":"impl&lt;AccountId, Balance&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.Collator2.html\" title=\"struct parachain_staking::pallet::Collator2\">Collator2</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrderedSet&lt;AccountId&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"parachain_staking/pallet/struct.Bond.html\" title=\"struct parachain_staking::pallet::Bond\">Bond</a>&lt;AccountId, Balance&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"parachain_staking/pallet/struct.Bond.html\" title=\"struct parachain_staking::pallet::Bond\">Bond</a>&lt;AccountId, Balance&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Collator2"]},{"text":"impl&lt;B&gt; TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.NominatorAdded.html\" title=\"enum parachain_staking::pallet::NominatorAdded\">NominatorAdded</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::NominatorAdded"]},{"text":"impl TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.NominatorStatus.html\" title=\"enum parachain_staking::pallet::NominatorStatus\">NominatorStatus</a>","synthetic":false,"types":["parachain_staking::pallet::NominatorStatus"]},{"text":"impl&lt;AccountId, Balance&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.Nominator2.html\" title=\"struct parachain_staking::pallet::Nominator2\">Nominator2</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OrderedSet&lt;<a class=\"struct\" href=\"parachain_staking/pallet/struct.Bond.html\" title=\"struct parachain_staking::pallet::Bond\">Bond</a>&lt;AccountId, Balance&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrderedSet&lt;AccountId&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Nominator2"]},{"text":"impl&lt;BlockNumber&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.RoundInfo.html\" title=\"struct parachain_staking::pallet::RoundInfo\">RoundInfo</a>&lt;BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::RoundInfo"]},{"text":"impl&lt;AccountId&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.ParachainBondConfig.html\" title=\"struct parachain_staking::pallet::ParachainBondConfig\">ParachainBondConfig</a>&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::ParachainBondConfig"]},{"text":"impl&lt;AccountId&gt; TypeInfo for <a class=\"struct\" href=\"parachain_staking/pallet/struct.ExitQ.html\" title=\"struct parachain_staking::pallet::ExitQ\">ExitQ</a>&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OrderedSet&lt;AccountId&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrderedSet&lt;AccountId&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>AccountId, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>AccountId, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;AccountId&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: TypeInfo + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::ExitQ"]},{"text":"impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.Error.html\" title=\"enum parachain_staking::pallet::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Error"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"parachain_staking/pallet/trait.Config.html\" title=\"trait parachain_staking::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.Event.html\" title=\"enum parachain_staking::pallet::Event\">Event</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"parachain_staking/pallet/enum.NominatorAdded.html\" title=\"enum parachain_staking::pallet::NominatorAdded\">NominatorAdded</a>&lt;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"parachain_staking/pallet/trait.Config.html\" title=\"trait parachain_staking::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Event"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"parachain_staking/pallet/trait.Config.html\" title=\"trait parachain_staking::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"parachain_staking/pallet/enum.Call.html\" title=\"enum parachain_staking::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"parachain_staking/struct.Range.html\" title=\"struct parachain_staking::Range\">Range</a>&lt;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"parachain_staking/pallet/type.BalanceOf.html\" title=\"type parachain_staking::pallet::BalanceOf\">BalanceOf</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"parachain_staking/pallet/trait.Config.html\" title=\"trait parachain_staking::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["parachain_staking::pallet::Call"]}];
implementors["xcm_transactor"] = [{"text":"impl TypeInfo for <a class=\"struct\" href=\"xcm_transactor/pallet/struct.RemoteTransactInfo.html\" title=\"struct xcm_transactor::pallet::RemoteTransactInfo\">RemoteTransactInfo</a>","synthetic":false,"types":["xcm_transactor::pallet::RemoteTransactInfo"]},{"text":"impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"xcm_transactor/pallet/enum.Error.html\" title=\"enum xcm_transactor::pallet::Error\">Error</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,&nbsp;</span>","synthetic":false,"types":["xcm_transactor::pallet::Error"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"xcm_transactor/pallet/trait.Config.html\" title=\"trait xcm_transactor::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"xcm_transactor/pallet/enum.Event.html\" title=\"enum xcm_transactor::pallet::Event\">Event</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"xcm_transactor/pallet/trait.Config.html\" title=\"trait xcm_transactor::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["xcm_transactor::pallet::Event"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"xcm_transactor/pallet/trait.Config.html\" title=\"trait xcm_transactor::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"xcm_transactor/pallet/enum.Call.html\" title=\"enum xcm_transactor::pallet::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"xcm_transactor/pallet/trait.Config.html#associatedtype.Transactor\" title=\"type xcm_transactor::pallet::Config::Transactor\">Transactor</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"xcm_transactor/pallet/trait.Config.html#associatedtype.Transactor\" title=\"type xcm_transactor::pallet::Config::Transactor\">Transactor</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"xcm_transactor/pallet/trait.Config.html#associatedtype.CurrencyId\" title=\"type xcm_transactor::pallet::Config::CurrencyId\">CurrencyId</a>: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"xcm_transactor/pallet/trait.Config.html\" title=\"trait xcm_transactor::pallet::Config\">Config</a> + 'static,&nbsp;</span>","synthetic":false,"types":["xcm_transactor::pallet::Call"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()